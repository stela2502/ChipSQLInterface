# Define the base image (Alpine)
Bootstrap: docker
From: postgres:latest

# Metadata about the image
%labels
    Author YourName
    Version 1.0
    Description "PostgreSQL with Human GTF Parsing and Web Interface for Summary Peaks"

# Setup environment variables and dependencies
%environment
    export PATH=$PATH:/usr/local/bin
    export PGDATA=/opt/data
    export PGLOG=/opt/log
    export LANG=C.UTF-8
    export LC_ALL=C.UTF-8
%files
    # Copy the external SQL script (setup_db.sql) into the container
    db_definition/setup_db.sql /etc/setup_db.sql
    db_definition/load_gtf.py /usr/local/bin/load_gtf.py
    db_definition/flask_app.py /usr/local/bin/flask_app.py
    db_definition/start_with_db.sh /usr/local/bin/start_with_db.sh
    db_definition/stop_server.sh /usr/local/bin/stop_server.sh
    db_definition/templates /usr/local/bin/templates



# Install dependencies
%post

    export PATH=$PATH:/usr/local/bin
    export PGDATA=/opt/data

    apt update && apt install -y libstdc++6 zlib1g libcurl4 libboost-all-dev gffread python3-pip tzdata python3-psycopg2 sudo
    #apt update && apt install -y gffread python3-pip

    ln -sf /usr/share/zoneinfo/Europe/Stockholm /etc/localtime

    # Install Flask and other required Python packages
    pip3 install flask pandas --break-system-packages 

    POSTGRES_PASSWORD=$(openssl rand -base64 16) && echo "PostgreSQL password: $POSTGRES_PASSWORD"
    echo $POSTGRES_PASSWORD > /etc/postgres_password.txt

    echo "ALL ALL=(postgres) NOPASSWD: /usr/lib/postgresql/*/bin/pg_ctl" >> /etc/sudoers
    
    sudo chown root:root /etc/sudo.conf
    
    mkdir $PGDATA    
    export LANG=C.UTF-8
    export LC_ALL=C.UTF-8
    chmod +x /usr/local/bin/*

# Define the entrypoint for the container (run PostgreSQL server and Flask app)
%runscript
    export POSTGRES_PASSWORD=$(cat /etc/postgres_password.txt)
    # Initialize database if not been done
    # get rid of all old lock files - left overs if the server is not shut down as it should be
    rm -f /opt/data/.s.*
    stop_server.sh
    sleep 5
    start_with_db.sh
    sleep 10
    python3 /usr/local/bin/flask_app.py
    tail -f /dev/null


%startscript
    export POSTGRES_PASSWORD=$(cat /etc/postgres_password.txt)
    start_with_db.sh
    echo "Starting PostgreSQL..."
    # get rid of all old lock files - left overs if the server is not shut down as it should be
    rm -f /opt/data/.s.*
    start_with_db.sh
